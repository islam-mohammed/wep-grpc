// source: pnp/catalog/v1/catalog.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_duration_pb = require('google-protobuf/google/protobuf/duration_pb.js');
goog.object.extend(proto, google_protobuf_duration_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
goog.exportSymbol('proto.pnp.catalog.v1.Card', null, global);
goog.exportSymbol('proto.pnp.catalog.v1.Card.Action', null, global);
goog.exportSymbol('proto.pnp.catalog.v1.Card.Blocker', null, global);
goog.exportSymbol('proto.pnp.catalog.v1.Card.Call', null, global);
goog.exportSymbol('proto.pnp.catalog.v1.Card.CardCase', null, global);
goog.exportSymbol('proto.pnp.catalog.v1.Card.Folder', null, global);
goog.exportSymbol('proto.pnp.catalog.v1.Card.Type', null, global);
goog.exportSymbol('proto.pnp.catalog.v1.Card.Video', null, global);
goog.exportSymbol('proto.pnp.catalog.v1.Chip', null, global);
goog.exportSymbol('proto.pnp.catalog.v1.FolderDetails', null, global);
goog.exportSymbol('proto.pnp.catalog.v1.FolderDetails.Banner', null, global);
goog.exportSymbol('proto.pnp.catalog.v1.FolderDetails.Group', null, global);
goog.exportSymbol('proto.pnp.catalog.v1.GetFolderDetailsRequest', null, global);
goog.exportSymbol('proto.pnp.catalog.v1.GetVideoDetailsRequest', null, global);
goog.exportSymbol('proto.pnp.catalog.v1.ListProductsResponse', null, global);
goog.exportSymbol('proto.pnp.catalog.v1.ListSectionsResponse', null, global);
goog.exportSymbol('proto.pnp.catalog.v1.ProductDetails', null, global);
goog.exportSymbol('proto.pnp.catalog.v1.ProductDetails.ProductDescription', null, global);
goog.exportSymbol('proto.pnp.catalog.v1.PurchaseCodes', null, global);
goog.exportSymbol('proto.pnp.catalog.v1.PurchaseInfo', null, global);
goog.exportSymbol('proto.pnp.catalog.v1.Section', null, global);
goog.exportSymbol('proto.pnp.catalog.v1.VideoDetails', null, global);
goog.exportSymbol('proto.pnp.catalog.v1.VideoDetails.PersoDescription', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pnp.catalog.v1.ListSectionsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pnp.catalog.v1.ListSectionsResponse.repeatedFields_, null);
};
goog.inherits(proto.pnp.catalog.v1.ListSectionsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pnp.catalog.v1.ListSectionsResponse.displayName = 'proto.pnp.catalog.v1.ListSectionsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pnp.catalog.v1.Section = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pnp.catalog.v1.Section, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pnp.catalog.v1.Section.displayName = 'proto.pnp.catalog.v1.Section';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pnp.catalog.v1.GetFolderDetailsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pnp.catalog.v1.GetFolderDetailsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pnp.catalog.v1.GetFolderDetailsRequest.displayName = 'proto.pnp.catalog.v1.GetFolderDetailsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pnp.catalog.v1.GetVideoDetailsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pnp.catalog.v1.GetVideoDetailsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pnp.catalog.v1.GetVideoDetailsRequest.displayName = 'proto.pnp.catalog.v1.GetVideoDetailsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pnp.catalog.v1.ListProductsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pnp.catalog.v1.ListProductsResponse.repeatedFields_, null);
};
goog.inherits(proto.pnp.catalog.v1.ListProductsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pnp.catalog.v1.ListProductsResponse.displayName = 'proto.pnp.catalog.v1.ListProductsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pnp.catalog.v1.FolderDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pnp.catalog.v1.FolderDetails.repeatedFields_, null);
};
goog.inherits(proto.pnp.catalog.v1.FolderDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pnp.catalog.v1.FolderDetails.displayName = 'proto.pnp.catalog.v1.FolderDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pnp.catalog.v1.FolderDetails.Banner = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pnp.catalog.v1.FolderDetails.Banner, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pnp.catalog.v1.FolderDetails.Banner.displayName = 'proto.pnp.catalog.v1.FolderDetails.Banner';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pnp.catalog.v1.FolderDetails.Group = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pnp.catalog.v1.FolderDetails.Group.repeatedFields_, null);
};
goog.inherits(proto.pnp.catalog.v1.FolderDetails.Group, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pnp.catalog.v1.FolderDetails.Group.displayName = 'proto.pnp.catalog.v1.FolderDetails.Group';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pnp.catalog.v1.Card = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.pnp.catalog.v1.Card.oneofGroups_);
};
goog.inherits(proto.pnp.catalog.v1.Card, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pnp.catalog.v1.Card.displayName = 'proto.pnp.catalog.v1.Card';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pnp.catalog.v1.Card.Folder = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pnp.catalog.v1.Card.Folder, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pnp.catalog.v1.Card.Folder.displayName = 'proto.pnp.catalog.v1.Card.Folder';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pnp.catalog.v1.Card.Video = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pnp.catalog.v1.Card.Video, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pnp.catalog.v1.Card.Video.displayName = 'proto.pnp.catalog.v1.Card.Video';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pnp.catalog.v1.Card.Call = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pnp.catalog.v1.Card.Call, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pnp.catalog.v1.Card.Call.displayName = 'proto.pnp.catalog.v1.Card.Call';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pnp.catalog.v1.Card.Blocker = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pnp.catalog.v1.Card.Blocker, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pnp.catalog.v1.Card.Blocker.displayName = 'proto.pnp.catalog.v1.Card.Blocker';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pnp.catalog.v1.VideoDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pnp.catalog.v1.VideoDetails.repeatedFields_, null);
};
goog.inherits(proto.pnp.catalog.v1.VideoDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pnp.catalog.v1.VideoDetails.displayName = 'proto.pnp.catalog.v1.VideoDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pnp.catalog.v1.VideoDetails.PersoDescription = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pnp.catalog.v1.VideoDetails.PersoDescription, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pnp.catalog.v1.VideoDetails.PersoDescription.displayName = 'proto.pnp.catalog.v1.VideoDetails.PersoDescription';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pnp.catalog.v1.ProductDetails = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pnp.catalog.v1.ProductDetails.repeatedFields_, null);
};
goog.inherits(proto.pnp.catalog.v1.ProductDetails, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pnp.catalog.v1.ProductDetails.displayName = 'proto.pnp.catalog.v1.ProductDetails';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pnp.catalog.v1.ProductDetails.ProductDescription = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pnp.catalog.v1.ProductDetails.ProductDescription, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pnp.catalog.v1.ProductDetails.ProductDescription.displayName = 'proto.pnp.catalog.v1.ProductDetails.ProductDescription';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pnp.catalog.v1.Chip = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pnp.catalog.v1.Chip, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pnp.catalog.v1.Chip.displayName = 'proto.pnp.catalog.v1.Chip';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pnp.catalog.v1.PurchaseInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pnp.catalog.v1.PurchaseInfo.repeatedFields_, null);
};
goog.inherits(proto.pnp.catalog.v1.PurchaseInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pnp.catalog.v1.PurchaseInfo.displayName = 'proto.pnp.catalog.v1.PurchaseInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pnp.catalog.v1.PurchaseCodes = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pnp.catalog.v1.PurchaseCodes, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pnp.catalog.v1.PurchaseCodes.displayName = 'proto.pnp.catalog.v1.PurchaseCodes';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pnp.catalog.v1.ListSectionsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pnp.catalog.v1.ListSectionsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pnp.catalog.v1.ListSectionsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pnp.catalog.v1.ListSectionsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.ListSectionsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    sectionsList: jspb.Message.toObjectList(msg.getSectionsList(),
    proto.pnp.catalog.v1.Section.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pnp.catalog.v1.ListSectionsResponse}
 */
proto.pnp.catalog.v1.ListSectionsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pnp.catalog.v1.ListSectionsResponse;
  return proto.pnp.catalog.v1.ListSectionsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pnp.catalog.v1.ListSectionsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pnp.catalog.v1.ListSectionsResponse}
 */
proto.pnp.catalog.v1.ListSectionsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pnp.catalog.v1.Section;
      reader.readMessage(value,proto.pnp.catalog.v1.Section.deserializeBinaryFromReader);
      msg.addSections(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pnp.catalog.v1.ListSectionsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pnp.catalog.v1.ListSectionsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pnp.catalog.v1.ListSectionsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.ListSectionsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.pnp.catalog.v1.Section.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Section sections = 1;
 * @return {!Array<!proto.pnp.catalog.v1.Section>}
 */
proto.pnp.catalog.v1.ListSectionsResponse.prototype.getSectionsList = function() {
  return /** @type{!Array<!proto.pnp.catalog.v1.Section>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pnp.catalog.v1.Section, 1));
};


/**
 * @param {!Array<!proto.pnp.catalog.v1.Section>} value
 * @return {!proto.pnp.catalog.v1.ListSectionsResponse} returns this
*/
proto.pnp.catalog.v1.ListSectionsResponse.prototype.setSectionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pnp.catalog.v1.Section=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pnp.catalog.v1.Section}
 */
proto.pnp.catalog.v1.ListSectionsResponse.prototype.addSections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pnp.catalog.v1.Section, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pnp.catalog.v1.ListSectionsResponse} returns this
 */
proto.pnp.catalog.v1.ListSectionsResponse.prototype.clearSectionsList = function() {
  return this.setSectionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pnp.catalog.v1.Section.prototype.toObject = function(opt_includeInstance) {
  return proto.pnp.catalog.v1.Section.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pnp.catalog.v1.Section} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.Section.toObject = function(includeInstance, msg) {
  var f, obj = {
    folderId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    label: jspb.Message.getFieldWithDefault(msg, 2, ""),
    icon: jspb.Message.getFieldWithDefault(msg, 3, ""),
    bgColor: jspb.Message.getFieldWithDefault(msg, 4, ""),
    fgColor: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pnp.catalog.v1.Section}
 */
proto.pnp.catalog.v1.Section.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pnp.catalog.v1.Section;
  return proto.pnp.catalog.v1.Section.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pnp.catalog.v1.Section} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pnp.catalog.v1.Section}
 */
proto.pnp.catalog.v1.Section.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFolderId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcon(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBgColor(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setFgColor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pnp.catalog.v1.Section.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pnp.catalog.v1.Section.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pnp.catalog.v1.Section} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.Section.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFolderId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIcon();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBgColor();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getFgColor();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional uint32 folder_id = 1;
 * @return {number}
 */
proto.pnp.catalog.v1.Section.prototype.getFolderId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pnp.catalog.v1.Section} returns this
 */
proto.pnp.catalog.v1.Section.prototype.setFolderId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.pnp.catalog.v1.Section.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.Section} returns this
 */
proto.pnp.catalog.v1.Section.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string icon = 3;
 * @return {string}
 */
proto.pnp.catalog.v1.Section.prototype.getIcon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.Section} returns this
 */
proto.pnp.catalog.v1.Section.prototype.setIcon = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string bg_color = 4;
 * @return {string}
 */
proto.pnp.catalog.v1.Section.prototype.getBgColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.Section} returns this
 */
proto.pnp.catalog.v1.Section.prototype.setBgColor = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string fg_color = 5;
 * @return {string}
 */
proto.pnp.catalog.v1.Section.prototype.getFgColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.Section} returns this
 */
proto.pnp.catalog.v1.Section.prototype.setFgColor = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pnp.catalog.v1.GetFolderDetailsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pnp.catalog.v1.GetFolderDetailsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pnp.catalog.v1.GetFolderDetailsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.GetFolderDetailsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pnp.catalog.v1.GetFolderDetailsRequest}
 */
proto.pnp.catalog.v1.GetFolderDetailsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pnp.catalog.v1.GetFolderDetailsRequest;
  return proto.pnp.catalog.v1.GetFolderDetailsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pnp.catalog.v1.GetFolderDetailsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pnp.catalog.v1.GetFolderDetailsRequest}
 */
proto.pnp.catalog.v1.GetFolderDetailsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pnp.catalog.v1.GetFolderDetailsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pnp.catalog.v1.GetFolderDetailsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pnp.catalog.v1.GetFolderDetailsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.GetFolderDetailsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.pnp.catalog.v1.GetFolderDetailsRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pnp.catalog.v1.GetFolderDetailsRequest} returns this
 */
proto.pnp.catalog.v1.GetFolderDetailsRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pnp.catalog.v1.GetVideoDetailsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pnp.catalog.v1.GetVideoDetailsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pnp.catalog.v1.GetVideoDetailsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.GetVideoDetailsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pnp.catalog.v1.GetVideoDetailsRequest}
 */
proto.pnp.catalog.v1.GetVideoDetailsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pnp.catalog.v1.GetVideoDetailsRequest;
  return proto.pnp.catalog.v1.GetVideoDetailsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pnp.catalog.v1.GetVideoDetailsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pnp.catalog.v1.GetVideoDetailsRequest}
 */
proto.pnp.catalog.v1.GetVideoDetailsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pnp.catalog.v1.GetVideoDetailsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pnp.catalog.v1.GetVideoDetailsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pnp.catalog.v1.GetVideoDetailsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.GetVideoDetailsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.pnp.catalog.v1.GetVideoDetailsRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pnp.catalog.v1.GetVideoDetailsRequest} returns this
 */
proto.pnp.catalog.v1.GetVideoDetailsRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pnp.catalog.v1.ListProductsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pnp.catalog.v1.ListProductsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pnp.catalog.v1.ListProductsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pnp.catalog.v1.ListProductsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.ListProductsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    productDetailsList: jspb.Message.toObjectList(msg.getProductDetailsList(),
    proto.pnp.catalog.v1.ProductDetails.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pnp.catalog.v1.ListProductsResponse}
 */
proto.pnp.catalog.v1.ListProductsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pnp.catalog.v1.ListProductsResponse;
  return proto.pnp.catalog.v1.ListProductsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pnp.catalog.v1.ListProductsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pnp.catalog.v1.ListProductsResponse}
 */
proto.pnp.catalog.v1.ListProductsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pnp.catalog.v1.ProductDetails;
      reader.readMessage(value,proto.pnp.catalog.v1.ProductDetails.deserializeBinaryFromReader);
      msg.addProductDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pnp.catalog.v1.ListProductsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pnp.catalog.v1.ListProductsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pnp.catalog.v1.ListProductsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.ListProductsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProductDetailsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.pnp.catalog.v1.ProductDetails.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ProductDetails product_details = 1;
 * @return {!Array<!proto.pnp.catalog.v1.ProductDetails>}
 */
proto.pnp.catalog.v1.ListProductsResponse.prototype.getProductDetailsList = function() {
  return /** @type{!Array<!proto.pnp.catalog.v1.ProductDetails>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pnp.catalog.v1.ProductDetails, 1));
};


/**
 * @param {!Array<!proto.pnp.catalog.v1.ProductDetails>} value
 * @return {!proto.pnp.catalog.v1.ListProductsResponse} returns this
*/
proto.pnp.catalog.v1.ListProductsResponse.prototype.setProductDetailsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pnp.catalog.v1.ProductDetails=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pnp.catalog.v1.ProductDetails}
 */
proto.pnp.catalog.v1.ListProductsResponse.prototype.addProductDetails = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pnp.catalog.v1.ProductDetails, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pnp.catalog.v1.ListProductsResponse} returns this
 */
proto.pnp.catalog.v1.ListProductsResponse.prototype.clearProductDetailsList = function() {
  return this.setProductDetailsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pnp.catalog.v1.FolderDetails.repeatedFields_ = [17];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pnp.catalog.v1.FolderDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.pnp.catalog.v1.FolderDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pnp.catalog.v1.FolderDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.FolderDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    purchaseCodes: (f = msg.getPurchaseCodes()) && proto.pnp.catalog.v1.PurchaseCodes.toObject(includeInstance, f),
    banner: (f = msg.getBanner()) && proto.pnp.catalog.v1.FolderDetails.Banner.toObject(includeInstance, f),
    groupsList: jspb.Message.toObjectList(msg.getGroupsList(),
    proto.pnp.catalog.v1.FolderDetails.Group.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pnp.catalog.v1.FolderDetails}
 */
proto.pnp.catalog.v1.FolderDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pnp.catalog.v1.FolderDetails;
  return proto.pnp.catalog.v1.FolderDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pnp.catalog.v1.FolderDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pnp.catalog.v1.FolderDetails}
 */
proto.pnp.catalog.v1.FolderDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pnp.catalog.v1.PurchaseCodes;
      reader.readMessage(value,proto.pnp.catalog.v1.PurchaseCodes.deserializeBinaryFromReader);
      msg.setPurchaseCodes(value);
      break;
    case 16:
      var value = new proto.pnp.catalog.v1.FolderDetails.Banner;
      reader.readMessage(value,proto.pnp.catalog.v1.FolderDetails.Banner.deserializeBinaryFromReader);
      msg.setBanner(value);
      break;
    case 17:
      var value = new proto.pnp.catalog.v1.FolderDetails.Group;
      reader.readMessage(value,proto.pnp.catalog.v1.FolderDetails.Group.deserializeBinaryFromReader);
      msg.addGroups(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pnp.catalog.v1.FolderDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pnp.catalog.v1.FolderDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pnp.catalog.v1.FolderDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.FolderDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPurchaseCodes();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.pnp.catalog.v1.PurchaseCodes.serializeBinaryToWriter
    );
  }
  f = message.getBanner();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.pnp.catalog.v1.FolderDetails.Banner.serializeBinaryToWriter
    );
  }
  f = message.getGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      17,
      f,
      proto.pnp.catalog.v1.FolderDetails.Group.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pnp.catalog.v1.FolderDetails.Banner.prototype.toObject = function(opt_includeInstance) {
  return proto.pnp.catalog.v1.FolderDetails.Banner.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pnp.catalog.v1.FolderDetails.Banner} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.FolderDetails.Banner.toObject = function(includeInstance, msg) {
  var f, obj = {
    backgroundUrl: jspb.Message.getFieldWithDefault(msg, 1, ""),
    spriteUrl: jspb.Message.getFieldWithDefault(msg, 2, ""),
    videoUrl: jspb.Message.getFieldWithDefault(msg, 3, ""),
    message: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pnp.catalog.v1.FolderDetails.Banner}
 */
proto.pnp.catalog.v1.FolderDetails.Banner.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pnp.catalog.v1.FolderDetails.Banner;
  return proto.pnp.catalog.v1.FolderDetails.Banner.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pnp.catalog.v1.FolderDetails.Banner} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pnp.catalog.v1.FolderDetails.Banner}
 */
proto.pnp.catalog.v1.FolderDetails.Banner.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setBackgroundUrl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSpriteUrl(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVideoUrl(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pnp.catalog.v1.FolderDetails.Banner.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pnp.catalog.v1.FolderDetails.Banner.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pnp.catalog.v1.FolderDetails.Banner} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.FolderDetails.Banner.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBackgroundUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSpriteUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVideoUrl();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string background_url = 1;
 * @return {string}
 */
proto.pnp.catalog.v1.FolderDetails.Banner.prototype.getBackgroundUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.FolderDetails.Banner} returns this
 */
proto.pnp.catalog.v1.FolderDetails.Banner.prototype.setBackgroundUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string sprite_url = 2;
 * @return {string}
 */
proto.pnp.catalog.v1.FolderDetails.Banner.prototype.getSpriteUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.FolderDetails.Banner} returns this
 */
proto.pnp.catalog.v1.FolderDetails.Banner.prototype.setSpriteUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string video_url = 3;
 * @return {string}
 */
proto.pnp.catalog.v1.FolderDetails.Banner.prototype.getVideoUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.FolderDetails.Banner} returns this
 */
proto.pnp.catalog.v1.FolderDetails.Banner.prototype.setVideoUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string message = 4;
 * @return {string}
 */
proto.pnp.catalog.v1.FolderDetails.Banner.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.FolderDetails.Banner} returns this
 */
proto.pnp.catalog.v1.FolderDetails.Banner.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pnp.catalog.v1.FolderDetails.Group.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pnp.catalog.v1.FolderDetails.Group.prototype.toObject = function(opt_includeInstance) {
  return proto.pnp.catalog.v1.FolderDetails.Group.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pnp.catalog.v1.FolderDetails.Group} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.FolderDetails.Group.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: jspb.Message.getFieldWithDefault(msg, 1, ""),
    image: jspb.Message.getFieldWithDefault(msg, 2, ""),
    cardsList: jspb.Message.toObjectList(msg.getCardsList(),
    proto.pnp.catalog.v1.Card.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pnp.catalog.v1.FolderDetails.Group}
 */
proto.pnp.catalog.v1.FolderDetails.Group.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pnp.catalog.v1.FolderDetails.Group;
  return proto.pnp.catalog.v1.FolderDetails.Group.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pnp.catalog.v1.FolderDetails.Group} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pnp.catalog.v1.FolderDetails.Group}
 */
proto.pnp.catalog.v1.FolderDetails.Group.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setImage(value);
      break;
    case 8:
      var value = new proto.pnp.catalog.v1.Card;
      reader.readMessage(value,proto.pnp.catalog.v1.Card.deserializeBinaryFromReader);
      msg.addCards(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pnp.catalog.v1.FolderDetails.Group.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pnp.catalog.v1.FolderDetails.Group.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pnp.catalog.v1.FolderDetails.Group} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.FolderDetails.Group.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getImage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCardsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.pnp.catalog.v1.Card.serializeBinaryToWriter
    );
  }
};


/**
 * optional string label = 1;
 * @return {string}
 */
proto.pnp.catalog.v1.FolderDetails.Group.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.FolderDetails.Group} returns this
 */
proto.pnp.catalog.v1.FolderDetails.Group.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string image = 2;
 * @return {string}
 */
proto.pnp.catalog.v1.FolderDetails.Group.prototype.getImage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.FolderDetails.Group} returns this
 */
proto.pnp.catalog.v1.FolderDetails.Group.prototype.setImage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated Card cards = 8;
 * @return {!Array<!proto.pnp.catalog.v1.Card>}
 */
proto.pnp.catalog.v1.FolderDetails.Group.prototype.getCardsList = function() {
  return /** @type{!Array<!proto.pnp.catalog.v1.Card>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pnp.catalog.v1.Card, 8));
};


/**
 * @param {!Array<!proto.pnp.catalog.v1.Card>} value
 * @return {!proto.pnp.catalog.v1.FolderDetails.Group} returns this
*/
proto.pnp.catalog.v1.FolderDetails.Group.prototype.setCardsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.pnp.catalog.v1.Card=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pnp.catalog.v1.Card}
 */
proto.pnp.catalog.v1.FolderDetails.Group.prototype.addCards = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.pnp.catalog.v1.Card, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pnp.catalog.v1.FolderDetails.Group} returns this
 */
proto.pnp.catalog.v1.FolderDetails.Group.prototype.clearCardsList = function() {
  return this.setCardsList([]);
};


/**
 * optional PurchaseCodes purchase_codes = 1;
 * @return {?proto.pnp.catalog.v1.PurchaseCodes}
 */
proto.pnp.catalog.v1.FolderDetails.prototype.getPurchaseCodes = function() {
  return /** @type{?proto.pnp.catalog.v1.PurchaseCodes} */ (
    jspb.Message.getWrapperField(this, proto.pnp.catalog.v1.PurchaseCodes, 1));
};


/**
 * @param {?proto.pnp.catalog.v1.PurchaseCodes|undefined} value
 * @return {!proto.pnp.catalog.v1.FolderDetails} returns this
*/
proto.pnp.catalog.v1.FolderDetails.prototype.setPurchaseCodes = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pnp.catalog.v1.FolderDetails} returns this
 */
proto.pnp.catalog.v1.FolderDetails.prototype.clearPurchaseCodes = function() {
  return this.setPurchaseCodes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pnp.catalog.v1.FolderDetails.prototype.hasPurchaseCodes = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Banner banner = 16;
 * @return {?proto.pnp.catalog.v1.FolderDetails.Banner}
 */
proto.pnp.catalog.v1.FolderDetails.prototype.getBanner = function() {
  return /** @type{?proto.pnp.catalog.v1.FolderDetails.Banner} */ (
    jspb.Message.getWrapperField(this, proto.pnp.catalog.v1.FolderDetails.Banner, 16));
};


/**
 * @param {?proto.pnp.catalog.v1.FolderDetails.Banner|undefined} value
 * @return {!proto.pnp.catalog.v1.FolderDetails} returns this
*/
proto.pnp.catalog.v1.FolderDetails.prototype.setBanner = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pnp.catalog.v1.FolderDetails} returns this
 */
proto.pnp.catalog.v1.FolderDetails.prototype.clearBanner = function() {
  return this.setBanner(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pnp.catalog.v1.FolderDetails.prototype.hasBanner = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * repeated Group groups = 17;
 * @return {!Array<!proto.pnp.catalog.v1.FolderDetails.Group>}
 */
proto.pnp.catalog.v1.FolderDetails.prototype.getGroupsList = function() {
  return /** @type{!Array<!proto.pnp.catalog.v1.FolderDetails.Group>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pnp.catalog.v1.FolderDetails.Group, 17));
};


/**
 * @param {!Array<!proto.pnp.catalog.v1.FolderDetails.Group>} value
 * @return {!proto.pnp.catalog.v1.FolderDetails} returns this
*/
proto.pnp.catalog.v1.FolderDetails.prototype.setGroupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 17, value);
};


/**
 * @param {!proto.pnp.catalog.v1.FolderDetails.Group=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pnp.catalog.v1.FolderDetails.Group}
 */
proto.pnp.catalog.v1.FolderDetails.prototype.addGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 17, opt_value, proto.pnp.catalog.v1.FolderDetails.Group, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pnp.catalog.v1.FolderDetails} returns this
 */
proto.pnp.catalog.v1.FolderDetails.prototype.clearGroupsList = function() {
  return this.setGroupsList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.pnp.catalog.v1.Card.oneofGroups_ = [[8,9,10]];

/**
 * @enum {number}
 */
proto.pnp.catalog.v1.Card.CardCase = {
  CARD_NOT_SET: 0,
  FOLDER: 8,
  VIDEO: 9,
  CALL: 10
};

/**
 * @return {proto.pnp.catalog.v1.Card.CardCase}
 */
proto.pnp.catalog.v1.Card.prototype.getCardCase = function() {
  return /** @type {proto.pnp.catalog.v1.Card.CardCase} */(jspb.Message.computeOneofCase(this, proto.pnp.catalog.v1.Card.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pnp.catalog.v1.Card.prototype.toObject = function(opt_includeInstance) {
  return proto.pnp.catalog.v1.Card.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pnp.catalog.v1.Card} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.Card.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    cardAction: jspb.Message.getFieldWithDefault(msg, 3, 0),
    buttonAction: jspb.Message.getFieldWithDefault(msg, 4, 0),
    folder: (f = msg.getFolder()) && proto.pnp.catalog.v1.Card.Folder.toObject(includeInstance, f),
    video: (f = msg.getVideo()) && proto.pnp.catalog.v1.Card.Video.toObject(includeInstance, f),
    call: (f = msg.getCall()) && proto.pnp.catalog.v1.Card.Call.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pnp.catalog.v1.Card}
 */
proto.pnp.catalog.v1.Card.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pnp.catalog.v1.Card;
  return proto.pnp.catalog.v1.Card.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pnp.catalog.v1.Card} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pnp.catalog.v1.Card}
 */
proto.pnp.catalog.v1.Card.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.pnp.catalog.v1.Card.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {!proto.pnp.catalog.v1.Card.Action} */ (reader.readEnum());
      msg.setCardAction(value);
      break;
    case 4:
      var value = /** @type {!proto.pnp.catalog.v1.Card.Action} */ (reader.readEnum());
      msg.setButtonAction(value);
      break;
    case 8:
      var value = new proto.pnp.catalog.v1.Card.Folder;
      reader.readMessage(value,proto.pnp.catalog.v1.Card.Folder.deserializeBinaryFromReader);
      msg.setFolder(value);
      break;
    case 9:
      var value = new proto.pnp.catalog.v1.Card.Video;
      reader.readMessage(value,proto.pnp.catalog.v1.Card.Video.deserializeBinaryFromReader);
      msg.setVideo(value);
      break;
    case 10:
      var value = new proto.pnp.catalog.v1.Card.Call;
      reader.readMessage(value,proto.pnp.catalog.v1.Card.Call.deserializeBinaryFromReader);
      msg.setCall(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pnp.catalog.v1.Card.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pnp.catalog.v1.Card.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pnp.catalog.v1.Card} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.Card.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getCardAction();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getButtonAction();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getFolder();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.pnp.catalog.v1.Card.Folder.serializeBinaryToWriter
    );
  }
  f = message.getVideo();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.pnp.catalog.v1.Card.Video.serializeBinaryToWriter
    );
  }
  f = message.getCall();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.pnp.catalog.v1.Card.Call.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.pnp.catalog.v1.Card.Type = {
  FOLDER: 0,
  VIDEO: 1,
  CALL: 2
};

/**
 * @enum {number}
 */
proto.pnp.catalog.v1.Card.Action = {
  NONE: 0,
  FORM: 1,
  CAPTURE_EMAIL: 2,
  BUY_DIRECT: 3,
  PRODUCT_DETAILS: 4,
  VIDEO_DETAILS: 5,
  FOLDER_DETAILS: 6
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pnp.catalog.v1.Card.Folder.prototype.toObject = function(opt_includeInstance) {
  return proto.pnp.catalog.v1.Card.Folder.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pnp.catalog.v1.Card.Folder} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.Card.Folder.toObject = function(includeInstance, msg) {
  var f, obj = {
    folderId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    imageUrl: jspb.Message.getFieldWithDefault(msg, 16, ""),
    iconUrl: jspb.Message.getFieldWithDefault(msg, 17, ""),
    title: jspb.Message.getFieldWithDefault(msg, 18, ""),
    subtitle: jspb.Message.getFieldWithDefault(msg, 19, ""),
    blocker: (f = msg.getBlocker()) && proto.pnp.catalog.v1.Card.Blocker.toObject(includeInstance, f),
    chip: (f = msg.getChip()) && proto.pnp.catalog.v1.Chip.toObject(includeInstance, f),
    purchaseInfo: (f = msg.getPurchaseInfo()) && proto.pnp.catalog.v1.PurchaseInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pnp.catalog.v1.Card.Folder}
 */
proto.pnp.catalog.v1.Card.Folder.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pnp.catalog.v1.Card.Folder;
  return proto.pnp.catalog.v1.Card.Folder.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pnp.catalog.v1.Card.Folder} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pnp.catalog.v1.Card.Folder}
 */
proto.pnp.catalog.v1.Card.Folder.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFolderId(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageUrl(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setIconUrl(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubtitle(value);
      break;
    case 32:
      var value = new proto.pnp.catalog.v1.Card.Blocker;
      reader.readMessage(value,proto.pnp.catalog.v1.Card.Blocker.deserializeBinaryFromReader);
      msg.setBlocker(value);
      break;
    case 33:
      var value = new proto.pnp.catalog.v1.Chip;
      reader.readMessage(value,proto.pnp.catalog.v1.Chip.deserializeBinaryFromReader);
      msg.setChip(value);
      break;
    case 48:
      var value = new proto.pnp.catalog.v1.PurchaseInfo;
      reader.readMessage(value,proto.pnp.catalog.v1.PurchaseInfo.deserializeBinaryFromReader);
      msg.setPurchaseInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pnp.catalog.v1.Card.Folder.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pnp.catalog.v1.Card.Folder.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pnp.catalog.v1.Card.Folder} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.Card.Folder.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFolderId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getImageUrl();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getIconUrl();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getSubtitle();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getBlocker();
  if (f != null) {
    writer.writeMessage(
      32,
      f,
      proto.pnp.catalog.v1.Card.Blocker.serializeBinaryToWriter
    );
  }
  f = message.getChip();
  if (f != null) {
    writer.writeMessage(
      33,
      f,
      proto.pnp.catalog.v1.Chip.serializeBinaryToWriter
    );
  }
  f = message.getPurchaseInfo();
  if (f != null) {
    writer.writeMessage(
      48,
      f,
      proto.pnp.catalog.v1.PurchaseInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 folder_id = 1;
 * @return {number}
 */
proto.pnp.catalog.v1.Card.Folder.prototype.getFolderId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pnp.catalog.v1.Card.Folder} returns this
 */
proto.pnp.catalog.v1.Card.Folder.prototype.setFolderId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string image_url = 16;
 * @return {string}
 */
proto.pnp.catalog.v1.Card.Folder.prototype.getImageUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.Card.Folder} returns this
 */
proto.pnp.catalog.v1.Card.Folder.prototype.setImageUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string icon_url = 17;
 * @return {string}
 */
proto.pnp.catalog.v1.Card.Folder.prototype.getIconUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.Card.Folder} returns this
 */
proto.pnp.catalog.v1.Card.Folder.prototype.setIconUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string title = 18;
 * @return {string}
 */
proto.pnp.catalog.v1.Card.Folder.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.Card.Folder} returns this
 */
proto.pnp.catalog.v1.Card.Folder.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string subtitle = 19;
 * @return {string}
 */
proto.pnp.catalog.v1.Card.Folder.prototype.getSubtitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.Card.Folder} returns this
 */
proto.pnp.catalog.v1.Card.Folder.prototype.setSubtitle = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional Blocker blocker = 32;
 * @return {?proto.pnp.catalog.v1.Card.Blocker}
 */
proto.pnp.catalog.v1.Card.Folder.prototype.getBlocker = function() {
  return /** @type{?proto.pnp.catalog.v1.Card.Blocker} */ (
    jspb.Message.getWrapperField(this, proto.pnp.catalog.v1.Card.Blocker, 32));
};


/**
 * @param {?proto.pnp.catalog.v1.Card.Blocker|undefined} value
 * @return {!proto.pnp.catalog.v1.Card.Folder} returns this
*/
proto.pnp.catalog.v1.Card.Folder.prototype.setBlocker = function(value) {
  return jspb.Message.setWrapperField(this, 32, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pnp.catalog.v1.Card.Folder} returns this
 */
proto.pnp.catalog.v1.Card.Folder.prototype.clearBlocker = function() {
  return this.setBlocker(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pnp.catalog.v1.Card.Folder.prototype.hasBlocker = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional Chip chip = 33;
 * @return {?proto.pnp.catalog.v1.Chip}
 */
proto.pnp.catalog.v1.Card.Folder.prototype.getChip = function() {
  return /** @type{?proto.pnp.catalog.v1.Chip} */ (
    jspb.Message.getWrapperField(this, proto.pnp.catalog.v1.Chip, 33));
};


/**
 * @param {?proto.pnp.catalog.v1.Chip|undefined} value
 * @return {!proto.pnp.catalog.v1.Card.Folder} returns this
*/
proto.pnp.catalog.v1.Card.Folder.prototype.setChip = function(value) {
  return jspb.Message.setWrapperField(this, 33, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pnp.catalog.v1.Card.Folder} returns this
 */
proto.pnp.catalog.v1.Card.Folder.prototype.clearChip = function() {
  return this.setChip(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pnp.catalog.v1.Card.Folder.prototype.hasChip = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional PurchaseInfo purchase_info = 48;
 * @return {?proto.pnp.catalog.v1.PurchaseInfo}
 */
proto.pnp.catalog.v1.Card.Folder.prototype.getPurchaseInfo = function() {
  return /** @type{?proto.pnp.catalog.v1.PurchaseInfo} */ (
    jspb.Message.getWrapperField(this, proto.pnp.catalog.v1.PurchaseInfo, 48));
};


/**
 * @param {?proto.pnp.catalog.v1.PurchaseInfo|undefined} value
 * @return {!proto.pnp.catalog.v1.Card.Folder} returns this
*/
proto.pnp.catalog.v1.Card.Folder.prototype.setPurchaseInfo = function(value) {
  return jspb.Message.setWrapperField(this, 48, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pnp.catalog.v1.Card.Folder} returns this
 */
proto.pnp.catalog.v1.Card.Folder.prototype.clearPurchaseInfo = function() {
  return this.setPurchaseInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pnp.catalog.v1.Card.Folder.prototype.hasPurchaseInfo = function() {
  return jspb.Message.getField(this, 48) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pnp.catalog.v1.Card.Video.prototype.toObject = function(opt_includeInstance) {
  return proto.pnp.catalog.v1.Card.Video.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pnp.catalog.v1.Card.Video} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.Card.Video.toObject = function(includeInstance, msg) {
  var f, obj = {
    formId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    scenarioId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    imageUrl: jspb.Message.getFieldWithDefault(msg, 16, ""),
    iconUrl: jspb.Message.getFieldWithDefault(msg, 17, ""),
    title: jspb.Message.getFieldWithDefault(msg, 18, ""),
    subtitle: jspb.Message.getFieldWithDefault(msg, 19, ""),
    blocker: (f = msg.getBlocker()) && proto.pnp.catalog.v1.Card.Blocker.toObject(includeInstance, f),
    chip: (f = msg.getChip()) && proto.pnp.catalog.v1.Chip.toObject(includeInstance, f),
    purchaseInfo: (f = msg.getPurchaseInfo()) && proto.pnp.catalog.v1.PurchaseInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pnp.catalog.v1.Card.Video}
 */
proto.pnp.catalog.v1.Card.Video.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pnp.catalog.v1.Card.Video;
  return proto.pnp.catalog.v1.Card.Video.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pnp.catalog.v1.Card.Video} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pnp.catalog.v1.Card.Video}
 */
proto.pnp.catalog.v1.Card.Video.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFormId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setScenarioId(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageUrl(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setIconUrl(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setSubtitle(value);
      break;
    case 32:
      var value = new proto.pnp.catalog.v1.Card.Blocker;
      reader.readMessage(value,proto.pnp.catalog.v1.Card.Blocker.deserializeBinaryFromReader);
      msg.setBlocker(value);
      break;
    case 33:
      var value = new proto.pnp.catalog.v1.Chip;
      reader.readMessage(value,proto.pnp.catalog.v1.Chip.deserializeBinaryFromReader);
      msg.setChip(value);
      break;
    case 48:
      var value = new proto.pnp.catalog.v1.PurchaseInfo;
      reader.readMessage(value,proto.pnp.catalog.v1.PurchaseInfo.deserializeBinaryFromReader);
      msg.setPurchaseInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pnp.catalog.v1.Card.Video.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pnp.catalog.v1.Card.Video.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pnp.catalog.v1.Card.Video} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.Card.Video.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFormId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getScenarioId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getImageUrl();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getIconUrl();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getSubtitle();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getBlocker();
  if (f != null) {
    writer.writeMessage(
      32,
      f,
      proto.pnp.catalog.v1.Card.Blocker.serializeBinaryToWriter
    );
  }
  f = message.getChip();
  if (f != null) {
    writer.writeMessage(
      33,
      f,
      proto.pnp.catalog.v1.Chip.serializeBinaryToWriter
    );
  }
  f = message.getPurchaseInfo();
  if (f != null) {
    writer.writeMessage(
      48,
      f,
      proto.pnp.catalog.v1.PurchaseInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 form_id = 1;
 * @return {number}
 */
proto.pnp.catalog.v1.Card.Video.prototype.getFormId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pnp.catalog.v1.Card.Video} returns this
 */
proto.pnp.catalog.v1.Card.Video.prototype.setFormId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 scenario_id = 2;
 * @return {number}
 */
proto.pnp.catalog.v1.Card.Video.prototype.getScenarioId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pnp.catalog.v1.Card.Video} returns this
 */
proto.pnp.catalog.v1.Card.Video.prototype.setScenarioId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string image_url = 16;
 * @return {string}
 */
proto.pnp.catalog.v1.Card.Video.prototype.getImageUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.Card.Video} returns this
 */
proto.pnp.catalog.v1.Card.Video.prototype.setImageUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string icon_url = 17;
 * @return {string}
 */
proto.pnp.catalog.v1.Card.Video.prototype.getIconUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.Card.Video} returns this
 */
proto.pnp.catalog.v1.Card.Video.prototype.setIconUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string title = 18;
 * @return {string}
 */
proto.pnp.catalog.v1.Card.Video.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.Card.Video} returns this
 */
proto.pnp.catalog.v1.Card.Video.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string subtitle = 19;
 * @return {string}
 */
proto.pnp.catalog.v1.Card.Video.prototype.getSubtitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.Card.Video} returns this
 */
proto.pnp.catalog.v1.Card.Video.prototype.setSubtitle = function(value) {
  return jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional Blocker blocker = 32;
 * @return {?proto.pnp.catalog.v1.Card.Blocker}
 */
proto.pnp.catalog.v1.Card.Video.prototype.getBlocker = function() {
  return /** @type{?proto.pnp.catalog.v1.Card.Blocker} */ (
    jspb.Message.getWrapperField(this, proto.pnp.catalog.v1.Card.Blocker, 32));
};


/**
 * @param {?proto.pnp.catalog.v1.Card.Blocker|undefined} value
 * @return {!proto.pnp.catalog.v1.Card.Video} returns this
*/
proto.pnp.catalog.v1.Card.Video.prototype.setBlocker = function(value) {
  return jspb.Message.setWrapperField(this, 32, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pnp.catalog.v1.Card.Video} returns this
 */
proto.pnp.catalog.v1.Card.Video.prototype.clearBlocker = function() {
  return this.setBlocker(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pnp.catalog.v1.Card.Video.prototype.hasBlocker = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional Chip chip = 33;
 * @return {?proto.pnp.catalog.v1.Chip}
 */
proto.pnp.catalog.v1.Card.Video.prototype.getChip = function() {
  return /** @type{?proto.pnp.catalog.v1.Chip} */ (
    jspb.Message.getWrapperField(this, proto.pnp.catalog.v1.Chip, 33));
};


/**
 * @param {?proto.pnp.catalog.v1.Chip|undefined} value
 * @return {!proto.pnp.catalog.v1.Card.Video} returns this
*/
proto.pnp.catalog.v1.Card.Video.prototype.setChip = function(value) {
  return jspb.Message.setWrapperField(this, 33, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pnp.catalog.v1.Card.Video} returns this
 */
proto.pnp.catalog.v1.Card.Video.prototype.clearChip = function() {
  return this.setChip(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pnp.catalog.v1.Card.Video.prototype.hasChip = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional PurchaseInfo purchase_info = 48;
 * @return {?proto.pnp.catalog.v1.PurchaseInfo}
 */
proto.pnp.catalog.v1.Card.Video.prototype.getPurchaseInfo = function() {
  return /** @type{?proto.pnp.catalog.v1.PurchaseInfo} */ (
    jspb.Message.getWrapperField(this, proto.pnp.catalog.v1.PurchaseInfo, 48));
};


/**
 * @param {?proto.pnp.catalog.v1.PurchaseInfo|undefined} value
 * @return {!proto.pnp.catalog.v1.Card.Video} returns this
*/
proto.pnp.catalog.v1.Card.Video.prototype.setPurchaseInfo = function(value) {
  return jspb.Message.setWrapperField(this, 48, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pnp.catalog.v1.Card.Video} returns this
 */
proto.pnp.catalog.v1.Card.Video.prototype.clearPurchaseInfo = function() {
  return this.setPurchaseInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pnp.catalog.v1.Card.Video.prototype.hasPurchaseInfo = function() {
  return jspb.Message.getField(this, 48) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pnp.catalog.v1.Card.Call.prototype.toObject = function(opt_includeInstance) {
  return proto.pnp.catalog.v1.Card.Call.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pnp.catalog.v1.Card.Call} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.Card.Call.toObject = function(includeInstance, msg) {
  var f, obj = {
    formId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    scenarioId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    duration: (f = msg.getDuration()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    title: jspb.Message.getFieldWithDefault(msg, 16, ""),
    previewUrl: jspb.Message.getFieldWithDefault(msg, 17, ""),
    chip: (f = msg.getChip()) && proto.pnp.catalog.v1.Chip.toObject(includeInstance, f),
    purchaseInfo: (f = msg.getPurchaseInfo()) && proto.pnp.catalog.v1.PurchaseInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pnp.catalog.v1.Card.Call}
 */
proto.pnp.catalog.v1.Card.Call.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pnp.catalog.v1.Card.Call;
  return proto.pnp.catalog.v1.Card.Call.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pnp.catalog.v1.Card.Call} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pnp.catalog.v1.Card.Call}
 */
proto.pnp.catalog.v1.Card.Call.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFormId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setScenarioId(value);
      break;
    case 3:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setDuration(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreviewUrl(value);
      break;
    case 32:
      var value = new proto.pnp.catalog.v1.Chip;
      reader.readMessage(value,proto.pnp.catalog.v1.Chip.deserializeBinaryFromReader);
      msg.setChip(value);
      break;
    case 48:
      var value = new proto.pnp.catalog.v1.PurchaseInfo;
      reader.readMessage(value,proto.pnp.catalog.v1.PurchaseInfo.deserializeBinaryFromReader);
      msg.setPurchaseInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pnp.catalog.v1.Card.Call.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pnp.catalog.v1.Card.Call.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pnp.catalog.v1.Card.Call} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.Card.Call.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFormId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getScenarioId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getDuration();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getPreviewUrl();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getChip();
  if (f != null) {
    writer.writeMessage(
      32,
      f,
      proto.pnp.catalog.v1.Chip.serializeBinaryToWriter
    );
  }
  f = message.getPurchaseInfo();
  if (f != null) {
    writer.writeMessage(
      48,
      f,
      proto.pnp.catalog.v1.PurchaseInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 form_id = 1;
 * @return {number}
 */
proto.pnp.catalog.v1.Card.Call.prototype.getFormId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pnp.catalog.v1.Card.Call} returns this
 */
proto.pnp.catalog.v1.Card.Call.prototype.setFormId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 scenario_id = 2;
 * @return {number}
 */
proto.pnp.catalog.v1.Card.Call.prototype.getScenarioId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pnp.catalog.v1.Card.Call} returns this
 */
proto.pnp.catalog.v1.Card.Call.prototype.setScenarioId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional google.protobuf.Duration duration = 3;
 * @return {?proto.google.protobuf.Duration}
 */
proto.pnp.catalog.v1.Card.Call.prototype.getDuration = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 3));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.pnp.catalog.v1.Card.Call} returns this
*/
proto.pnp.catalog.v1.Card.Call.prototype.setDuration = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pnp.catalog.v1.Card.Call} returns this
 */
proto.pnp.catalog.v1.Card.Call.prototype.clearDuration = function() {
  return this.setDuration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pnp.catalog.v1.Card.Call.prototype.hasDuration = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string title = 16;
 * @return {string}
 */
proto.pnp.catalog.v1.Card.Call.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.Card.Call} returns this
 */
proto.pnp.catalog.v1.Card.Call.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string preview_url = 17;
 * @return {string}
 */
proto.pnp.catalog.v1.Card.Call.prototype.getPreviewUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.Card.Call} returns this
 */
proto.pnp.catalog.v1.Card.Call.prototype.setPreviewUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional Chip chip = 32;
 * @return {?proto.pnp.catalog.v1.Chip}
 */
proto.pnp.catalog.v1.Card.Call.prototype.getChip = function() {
  return /** @type{?proto.pnp.catalog.v1.Chip} */ (
    jspb.Message.getWrapperField(this, proto.pnp.catalog.v1.Chip, 32));
};


/**
 * @param {?proto.pnp.catalog.v1.Chip|undefined} value
 * @return {!proto.pnp.catalog.v1.Card.Call} returns this
*/
proto.pnp.catalog.v1.Card.Call.prototype.setChip = function(value) {
  return jspb.Message.setWrapperField(this, 32, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pnp.catalog.v1.Card.Call} returns this
 */
proto.pnp.catalog.v1.Card.Call.prototype.clearChip = function() {
  return this.setChip(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pnp.catalog.v1.Card.Call.prototype.hasChip = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional PurchaseInfo purchase_info = 48;
 * @return {?proto.pnp.catalog.v1.PurchaseInfo}
 */
proto.pnp.catalog.v1.Card.Call.prototype.getPurchaseInfo = function() {
  return /** @type{?proto.pnp.catalog.v1.PurchaseInfo} */ (
    jspb.Message.getWrapperField(this, proto.pnp.catalog.v1.PurchaseInfo, 48));
};


/**
 * @param {?proto.pnp.catalog.v1.PurchaseInfo|undefined} value
 * @return {!proto.pnp.catalog.v1.Card.Call} returns this
*/
proto.pnp.catalog.v1.Card.Call.prototype.setPurchaseInfo = function(value) {
  return jspb.Message.setWrapperField(this, 48, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pnp.catalog.v1.Card.Call} returns this
 */
proto.pnp.catalog.v1.Card.Call.prototype.clearPurchaseInfo = function() {
  return this.setPurchaseInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pnp.catalog.v1.Card.Call.prototype.hasPurchaseInfo = function() {
  return jspb.Message.getField(this, 48) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pnp.catalog.v1.Card.Blocker.prototype.toObject = function(opt_includeInstance) {
  return proto.pnp.catalog.v1.Card.Blocker.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pnp.catalog.v1.Card.Blocker} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.Card.Blocker.toObject = function(includeInstance, msg) {
  var f, obj = {
    iconUrl: jspb.Message.getFieldWithDefault(msg, 1, ""),
    label: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pnp.catalog.v1.Card.Blocker}
 */
proto.pnp.catalog.v1.Card.Blocker.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pnp.catalog.v1.Card.Blocker;
  return proto.pnp.catalog.v1.Card.Blocker.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pnp.catalog.v1.Card.Blocker} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pnp.catalog.v1.Card.Blocker}
 */
proto.pnp.catalog.v1.Card.Blocker.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIconUrl(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pnp.catalog.v1.Card.Blocker.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pnp.catalog.v1.Card.Blocker.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pnp.catalog.v1.Card.Blocker} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.Card.Blocker.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIconUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string icon_url = 1;
 * @return {string}
 */
proto.pnp.catalog.v1.Card.Blocker.prototype.getIconUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.Card.Blocker} returns this
 */
proto.pnp.catalog.v1.Card.Blocker.prototype.setIconUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.pnp.catalog.v1.Card.Blocker.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.Card.Blocker} returns this
 */
proto.pnp.catalog.v1.Card.Blocker.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Type type = 1;
 * @return {!proto.pnp.catalog.v1.Card.Type}
 */
proto.pnp.catalog.v1.Card.prototype.getType = function() {
  return /** @type {!proto.pnp.catalog.v1.Card.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.pnp.catalog.v1.Card.Type} value
 * @return {!proto.pnp.catalog.v1.Card} returns this
 */
proto.pnp.catalog.v1.Card.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional Action card_action = 3;
 * @return {!proto.pnp.catalog.v1.Card.Action}
 */
proto.pnp.catalog.v1.Card.prototype.getCardAction = function() {
  return /** @type {!proto.pnp.catalog.v1.Card.Action} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.pnp.catalog.v1.Card.Action} value
 * @return {!proto.pnp.catalog.v1.Card} returns this
 */
proto.pnp.catalog.v1.Card.prototype.setCardAction = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional Action button_action = 4;
 * @return {!proto.pnp.catalog.v1.Card.Action}
 */
proto.pnp.catalog.v1.Card.prototype.getButtonAction = function() {
  return /** @type {!proto.pnp.catalog.v1.Card.Action} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.pnp.catalog.v1.Card.Action} value
 * @return {!proto.pnp.catalog.v1.Card} returns this
 */
proto.pnp.catalog.v1.Card.prototype.setButtonAction = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional Folder folder = 8;
 * @return {?proto.pnp.catalog.v1.Card.Folder}
 */
proto.pnp.catalog.v1.Card.prototype.getFolder = function() {
  return /** @type{?proto.pnp.catalog.v1.Card.Folder} */ (
    jspb.Message.getWrapperField(this, proto.pnp.catalog.v1.Card.Folder, 8));
};


/**
 * @param {?proto.pnp.catalog.v1.Card.Folder|undefined} value
 * @return {!proto.pnp.catalog.v1.Card} returns this
*/
proto.pnp.catalog.v1.Card.prototype.setFolder = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.pnp.catalog.v1.Card.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pnp.catalog.v1.Card} returns this
 */
proto.pnp.catalog.v1.Card.prototype.clearFolder = function() {
  return this.setFolder(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pnp.catalog.v1.Card.prototype.hasFolder = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Video video = 9;
 * @return {?proto.pnp.catalog.v1.Card.Video}
 */
proto.pnp.catalog.v1.Card.prototype.getVideo = function() {
  return /** @type{?proto.pnp.catalog.v1.Card.Video} */ (
    jspb.Message.getWrapperField(this, proto.pnp.catalog.v1.Card.Video, 9));
};


/**
 * @param {?proto.pnp.catalog.v1.Card.Video|undefined} value
 * @return {!proto.pnp.catalog.v1.Card} returns this
*/
proto.pnp.catalog.v1.Card.prototype.setVideo = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.pnp.catalog.v1.Card.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pnp.catalog.v1.Card} returns this
 */
proto.pnp.catalog.v1.Card.prototype.clearVideo = function() {
  return this.setVideo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pnp.catalog.v1.Card.prototype.hasVideo = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Call call = 10;
 * @return {?proto.pnp.catalog.v1.Card.Call}
 */
proto.pnp.catalog.v1.Card.prototype.getCall = function() {
  return /** @type{?proto.pnp.catalog.v1.Card.Call} */ (
    jspb.Message.getWrapperField(this, proto.pnp.catalog.v1.Card.Call, 10));
};


/**
 * @param {?proto.pnp.catalog.v1.Card.Call|undefined} value
 * @return {!proto.pnp.catalog.v1.Card} returns this
*/
proto.pnp.catalog.v1.Card.prototype.setCall = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.pnp.catalog.v1.Card.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pnp.catalog.v1.Card} returns this
 */
proto.pnp.catalog.v1.Card.prototype.clearCall = function() {
  return this.setCall(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pnp.catalog.v1.Card.prototype.hasCall = function() {
  return jspb.Message.getField(this, 10) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pnp.catalog.v1.VideoDetails.repeatedFields_ = [33];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pnp.catalog.v1.VideoDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.pnp.catalog.v1.VideoDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pnp.catalog.v1.VideoDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.VideoDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    formId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    scenarioId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    duration: (f = msg.getDuration()) && google_protobuf_duration_pb.Duration.toObject(includeInstance, f),
    title: jspb.Message.getFieldWithDefault(msg, 8, ""),
    posterUrl: jspb.Message.getFieldWithDefault(msg, 9, ""),
    previewUrl: jspb.Message.getFieldWithDefault(msg, 10, ""),
    shortDescription: jspb.Message.getFieldWithDefault(msg, 11, ""),
    longDescription: jspb.Message.getFieldWithDefault(msg, 12, ""),
    purchaseInfo: (f = msg.getPurchaseInfo()) && proto.pnp.catalog.v1.PurchaseInfo.toObject(includeInstance, f),
    persoDescriptionsList: jspb.Message.toObjectList(msg.getPersoDescriptionsList(),
    proto.pnp.catalog.v1.VideoDetails.PersoDescription.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pnp.catalog.v1.VideoDetails}
 */
proto.pnp.catalog.v1.VideoDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pnp.catalog.v1.VideoDetails;
  return proto.pnp.catalog.v1.VideoDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pnp.catalog.v1.VideoDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pnp.catalog.v1.VideoDetails}
 */
proto.pnp.catalog.v1.VideoDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFormId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setScenarioId(value);
      break;
    case 3:
      var value = new google_protobuf_duration_pb.Duration;
      reader.readMessage(value,google_protobuf_duration_pb.Duration.deserializeBinaryFromReader);
      msg.setDuration(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setPosterUrl(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreviewUrl(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setShortDescription(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setLongDescription(value);
      break;
    case 32:
      var value = new proto.pnp.catalog.v1.PurchaseInfo;
      reader.readMessage(value,proto.pnp.catalog.v1.PurchaseInfo.deserializeBinaryFromReader);
      msg.setPurchaseInfo(value);
      break;
    case 33:
      var value = new proto.pnp.catalog.v1.VideoDetails.PersoDescription;
      reader.readMessage(value,proto.pnp.catalog.v1.VideoDetails.PersoDescription.deserializeBinaryFromReader);
      msg.addPersoDescriptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pnp.catalog.v1.VideoDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pnp.catalog.v1.VideoDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pnp.catalog.v1.VideoDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.VideoDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFormId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getScenarioId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getDuration();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_duration_pb.Duration.serializeBinaryToWriter
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getPosterUrl();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getPreviewUrl();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getShortDescription();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getLongDescription();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getPurchaseInfo();
  if (f != null) {
    writer.writeMessage(
      32,
      f,
      proto.pnp.catalog.v1.PurchaseInfo.serializeBinaryToWriter
    );
  }
  f = message.getPersoDescriptionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      33,
      f,
      proto.pnp.catalog.v1.VideoDetails.PersoDescription.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pnp.catalog.v1.VideoDetails.PersoDescription.prototype.toObject = function(opt_includeInstance) {
  return proto.pnp.catalog.v1.VideoDetails.PersoDescription.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pnp.catalog.v1.VideoDetails.PersoDescription} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.VideoDetails.PersoDescription.toObject = function(includeInstance, msg) {
  var f, obj = {
    icon: jspb.Message.getFieldWithDefault(msg, 1, ""),
    label: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pictureCount: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pnp.catalog.v1.VideoDetails.PersoDescription}
 */
proto.pnp.catalog.v1.VideoDetails.PersoDescription.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pnp.catalog.v1.VideoDetails.PersoDescription;
  return proto.pnp.catalog.v1.VideoDetails.PersoDescription.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pnp.catalog.v1.VideoDetails.PersoDescription} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pnp.catalog.v1.VideoDetails.PersoDescription}
 */
proto.pnp.catalog.v1.VideoDetails.PersoDescription.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcon(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPictureCount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pnp.catalog.v1.VideoDetails.PersoDescription.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pnp.catalog.v1.VideoDetails.PersoDescription.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pnp.catalog.v1.VideoDetails.PersoDescription} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.VideoDetails.PersoDescription.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIcon();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPictureCount();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional string icon = 1;
 * @return {string}
 */
proto.pnp.catalog.v1.VideoDetails.PersoDescription.prototype.getIcon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.VideoDetails.PersoDescription} returns this
 */
proto.pnp.catalog.v1.VideoDetails.PersoDescription.prototype.setIcon = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.pnp.catalog.v1.VideoDetails.PersoDescription.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.VideoDetails.PersoDescription} returns this
 */
proto.pnp.catalog.v1.VideoDetails.PersoDescription.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 picture_count = 3;
 * @return {number}
 */
proto.pnp.catalog.v1.VideoDetails.PersoDescription.prototype.getPictureCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.pnp.catalog.v1.VideoDetails.PersoDescription} returns this
 */
proto.pnp.catalog.v1.VideoDetails.PersoDescription.prototype.setPictureCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 form_id = 1;
 * @return {number}
 */
proto.pnp.catalog.v1.VideoDetails.prototype.getFormId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pnp.catalog.v1.VideoDetails} returns this
 */
proto.pnp.catalog.v1.VideoDetails.prototype.setFormId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 scenario_id = 2;
 * @return {number}
 */
proto.pnp.catalog.v1.VideoDetails.prototype.getScenarioId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.pnp.catalog.v1.VideoDetails} returns this
 */
proto.pnp.catalog.v1.VideoDetails.prototype.setScenarioId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional google.protobuf.Duration duration = 3;
 * @return {?proto.google.protobuf.Duration}
 */
proto.pnp.catalog.v1.VideoDetails.prototype.getDuration = function() {
  return /** @type{?proto.google.protobuf.Duration} */ (
    jspb.Message.getWrapperField(this, google_protobuf_duration_pb.Duration, 3));
};


/**
 * @param {?proto.google.protobuf.Duration|undefined} value
 * @return {!proto.pnp.catalog.v1.VideoDetails} returns this
*/
proto.pnp.catalog.v1.VideoDetails.prototype.setDuration = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pnp.catalog.v1.VideoDetails} returns this
 */
proto.pnp.catalog.v1.VideoDetails.prototype.clearDuration = function() {
  return this.setDuration(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pnp.catalog.v1.VideoDetails.prototype.hasDuration = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string title = 8;
 * @return {string}
 */
proto.pnp.catalog.v1.VideoDetails.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.VideoDetails} returns this
 */
proto.pnp.catalog.v1.VideoDetails.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string poster_url = 9;
 * @return {string}
 */
proto.pnp.catalog.v1.VideoDetails.prototype.getPosterUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.VideoDetails} returns this
 */
proto.pnp.catalog.v1.VideoDetails.prototype.setPosterUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string preview_url = 10;
 * @return {string}
 */
proto.pnp.catalog.v1.VideoDetails.prototype.getPreviewUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.VideoDetails} returns this
 */
proto.pnp.catalog.v1.VideoDetails.prototype.setPreviewUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string short_description = 11;
 * @return {string}
 */
proto.pnp.catalog.v1.VideoDetails.prototype.getShortDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.VideoDetails} returns this
 */
proto.pnp.catalog.v1.VideoDetails.prototype.setShortDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string long_description = 12;
 * @return {string}
 */
proto.pnp.catalog.v1.VideoDetails.prototype.getLongDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.VideoDetails} returns this
 */
proto.pnp.catalog.v1.VideoDetails.prototype.setLongDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional PurchaseInfo purchase_info = 32;
 * @return {?proto.pnp.catalog.v1.PurchaseInfo}
 */
proto.pnp.catalog.v1.VideoDetails.prototype.getPurchaseInfo = function() {
  return /** @type{?proto.pnp.catalog.v1.PurchaseInfo} */ (
    jspb.Message.getWrapperField(this, proto.pnp.catalog.v1.PurchaseInfo, 32));
};


/**
 * @param {?proto.pnp.catalog.v1.PurchaseInfo|undefined} value
 * @return {!proto.pnp.catalog.v1.VideoDetails} returns this
*/
proto.pnp.catalog.v1.VideoDetails.prototype.setPurchaseInfo = function(value) {
  return jspb.Message.setWrapperField(this, 32, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pnp.catalog.v1.VideoDetails} returns this
 */
proto.pnp.catalog.v1.VideoDetails.prototype.clearPurchaseInfo = function() {
  return this.setPurchaseInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pnp.catalog.v1.VideoDetails.prototype.hasPurchaseInfo = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * repeated PersoDescription perso_descriptions = 33;
 * @return {!Array<!proto.pnp.catalog.v1.VideoDetails.PersoDescription>}
 */
proto.pnp.catalog.v1.VideoDetails.prototype.getPersoDescriptionsList = function() {
  return /** @type{!Array<!proto.pnp.catalog.v1.VideoDetails.PersoDescription>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pnp.catalog.v1.VideoDetails.PersoDescription, 33));
};


/**
 * @param {!Array<!proto.pnp.catalog.v1.VideoDetails.PersoDescription>} value
 * @return {!proto.pnp.catalog.v1.VideoDetails} returns this
*/
proto.pnp.catalog.v1.VideoDetails.prototype.setPersoDescriptionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 33, value);
};


/**
 * @param {!proto.pnp.catalog.v1.VideoDetails.PersoDescription=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pnp.catalog.v1.VideoDetails.PersoDescription}
 */
proto.pnp.catalog.v1.VideoDetails.prototype.addPersoDescriptions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 33, opt_value, proto.pnp.catalog.v1.VideoDetails.PersoDescription, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pnp.catalog.v1.VideoDetails} returns this
 */
proto.pnp.catalog.v1.VideoDetails.prototype.clearPersoDescriptionsList = function() {
  return this.setPersoDescriptionsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pnp.catalog.v1.ProductDetails.repeatedFields_ = [24];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pnp.catalog.v1.ProductDetails.prototype.toObject = function(opt_includeInstance) {
  return proto.pnp.catalog.v1.ProductDetails.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pnp.catalog.v1.ProductDetails} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.ProductDetails.toObject = function(includeInstance, msg) {
  var f, obj = {
    recommended: jspb.Message.getBooleanFieldWithDefault(msg, 1, false),
    title: jspb.Message.getFieldWithDefault(msg, 8, ""),
    displayPrice: jspb.Message.getFieldWithDefault(msg, 9, ""),
    purchaseCode: (f = msg.getPurchaseCode()) && proto.pnp.catalog.v1.PurchaseCodes.toObject(includeInstance, f),
    productDescriptionsList: jspb.Message.toObjectList(msg.getProductDescriptionsList(),
    proto.pnp.catalog.v1.ProductDetails.ProductDescription.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pnp.catalog.v1.ProductDetails}
 */
proto.pnp.catalog.v1.ProductDetails.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pnp.catalog.v1.ProductDetails;
  return proto.pnp.catalog.v1.ProductDetails.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pnp.catalog.v1.ProductDetails} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pnp.catalog.v1.ProductDetails}
 */
proto.pnp.catalog.v1.ProductDetails.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setRecommended(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayPrice(value);
      break;
    case 16:
      var value = new proto.pnp.catalog.v1.PurchaseCodes;
      reader.readMessage(value,proto.pnp.catalog.v1.PurchaseCodes.deserializeBinaryFromReader);
      msg.setPurchaseCode(value);
      break;
    case 24:
      var value = new proto.pnp.catalog.v1.ProductDetails.ProductDescription;
      reader.readMessage(value,proto.pnp.catalog.v1.ProductDetails.ProductDescription.deserializeBinaryFromReader);
      msg.addProductDescriptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pnp.catalog.v1.ProductDetails.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pnp.catalog.v1.ProductDetails.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pnp.catalog.v1.ProductDetails} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.ProductDetails.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecommended();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getDisplayPrice();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getPurchaseCode();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.pnp.catalog.v1.PurchaseCodes.serializeBinaryToWriter
    );
  }
  f = message.getProductDescriptionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      24,
      f,
      proto.pnp.catalog.v1.ProductDetails.ProductDescription.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pnp.catalog.v1.ProductDetails.ProductDescription.prototype.toObject = function(opt_includeInstance) {
  return proto.pnp.catalog.v1.ProductDetails.ProductDescription.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pnp.catalog.v1.ProductDetails.ProductDescription} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.ProductDetails.ProductDescription.toObject = function(includeInstance, msg) {
  var f, obj = {
    text: jspb.Message.getFieldWithDefault(msg, 1, ""),
    textColor: jspb.Message.getFieldWithDefault(msg, 2, ""),
    extraText: jspb.Message.getFieldWithDefault(msg, 3, ""),
    iconLeading: jspb.Message.getFieldWithDefault(msg, 4, ""),
    iconTrailing: jspb.Message.getFieldWithDefault(msg, 5, ""),
    chip: (f = msg.getChip()) && proto.pnp.catalog.v1.Chip.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pnp.catalog.v1.ProductDetails.ProductDescription}
 */
proto.pnp.catalog.v1.ProductDetails.ProductDescription.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pnp.catalog.v1.ProductDetails.ProductDescription;
  return proto.pnp.catalog.v1.ProductDetails.ProductDescription.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pnp.catalog.v1.ProductDetails.ProductDescription} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pnp.catalog.v1.ProductDetails.ProductDescription}
 */
proto.pnp.catalog.v1.ProductDetails.ProductDescription.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTextColor(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setExtraText(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIconLeading(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setIconTrailing(value);
      break;
    case 8:
      var value = new proto.pnp.catalog.v1.Chip;
      reader.readMessage(value,proto.pnp.catalog.v1.Chip.deserializeBinaryFromReader);
      msg.setChip(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pnp.catalog.v1.ProductDetails.ProductDescription.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pnp.catalog.v1.ProductDetails.ProductDescription.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pnp.catalog.v1.ProductDetails.ProductDescription} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.ProductDetails.ProductDescription.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getText();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTextColor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getExtraText();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIconLeading();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIconTrailing();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getChip();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.pnp.catalog.v1.Chip.serializeBinaryToWriter
    );
  }
};


/**
 * optional string text = 1;
 * @return {string}
 */
proto.pnp.catalog.v1.ProductDetails.ProductDescription.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.ProductDetails.ProductDescription} returns this
 */
proto.pnp.catalog.v1.ProductDetails.ProductDescription.prototype.setText = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string text_color = 2;
 * @return {string}
 */
proto.pnp.catalog.v1.ProductDetails.ProductDescription.prototype.getTextColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.ProductDetails.ProductDescription} returns this
 */
proto.pnp.catalog.v1.ProductDetails.ProductDescription.prototype.setTextColor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string extra_text = 3;
 * @return {string}
 */
proto.pnp.catalog.v1.ProductDetails.ProductDescription.prototype.getExtraText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.ProductDetails.ProductDescription} returns this
 */
proto.pnp.catalog.v1.ProductDetails.ProductDescription.prototype.setExtraText = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string icon_leading = 4;
 * @return {string}
 */
proto.pnp.catalog.v1.ProductDetails.ProductDescription.prototype.getIconLeading = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.ProductDetails.ProductDescription} returns this
 */
proto.pnp.catalog.v1.ProductDetails.ProductDescription.prototype.setIconLeading = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string icon_trailing = 5;
 * @return {string}
 */
proto.pnp.catalog.v1.ProductDetails.ProductDescription.prototype.getIconTrailing = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.ProductDetails.ProductDescription} returns this
 */
proto.pnp.catalog.v1.ProductDetails.ProductDescription.prototype.setIconTrailing = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional Chip chip = 8;
 * @return {?proto.pnp.catalog.v1.Chip}
 */
proto.pnp.catalog.v1.ProductDetails.ProductDescription.prototype.getChip = function() {
  return /** @type{?proto.pnp.catalog.v1.Chip} */ (
    jspb.Message.getWrapperField(this, proto.pnp.catalog.v1.Chip, 8));
};


/**
 * @param {?proto.pnp.catalog.v1.Chip|undefined} value
 * @return {!proto.pnp.catalog.v1.ProductDetails.ProductDescription} returns this
*/
proto.pnp.catalog.v1.ProductDetails.ProductDescription.prototype.setChip = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pnp.catalog.v1.ProductDetails.ProductDescription} returns this
 */
proto.pnp.catalog.v1.ProductDetails.ProductDescription.prototype.clearChip = function() {
  return this.setChip(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pnp.catalog.v1.ProductDetails.ProductDescription.prototype.hasChip = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional bool recommended = 1;
 * @return {boolean}
 */
proto.pnp.catalog.v1.ProductDetails.prototype.getRecommended = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.pnp.catalog.v1.ProductDetails} returns this
 */
proto.pnp.catalog.v1.ProductDetails.prototype.setRecommended = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};


/**
 * optional string title = 8;
 * @return {string}
 */
proto.pnp.catalog.v1.ProductDetails.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.ProductDetails} returns this
 */
proto.pnp.catalog.v1.ProductDetails.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string display_price = 9;
 * @return {string}
 */
proto.pnp.catalog.v1.ProductDetails.prototype.getDisplayPrice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.ProductDetails} returns this
 */
proto.pnp.catalog.v1.ProductDetails.prototype.setDisplayPrice = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional PurchaseCodes purchase_code = 16;
 * @return {?proto.pnp.catalog.v1.PurchaseCodes}
 */
proto.pnp.catalog.v1.ProductDetails.prototype.getPurchaseCode = function() {
  return /** @type{?proto.pnp.catalog.v1.PurchaseCodes} */ (
    jspb.Message.getWrapperField(this, proto.pnp.catalog.v1.PurchaseCodes, 16));
};


/**
 * @param {?proto.pnp.catalog.v1.PurchaseCodes|undefined} value
 * @return {!proto.pnp.catalog.v1.ProductDetails} returns this
*/
proto.pnp.catalog.v1.ProductDetails.prototype.setPurchaseCode = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pnp.catalog.v1.ProductDetails} returns this
 */
proto.pnp.catalog.v1.ProductDetails.prototype.clearPurchaseCode = function() {
  return this.setPurchaseCode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pnp.catalog.v1.ProductDetails.prototype.hasPurchaseCode = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * repeated ProductDescription product_descriptions = 24;
 * @return {!Array<!proto.pnp.catalog.v1.ProductDetails.ProductDescription>}
 */
proto.pnp.catalog.v1.ProductDetails.prototype.getProductDescriptionsList = function() {
  return /** @type{!Array<!proto.pnp.catalog.v1.ProductDetails.ProductDescription>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pnp.catalog.v1.ProductDetails.ProductDescription, 24));
};


/**
 * @param {!Array<!proto.pnp.catalog.v1.ProductDetails.ProductDescription>} value
 * @return {!proto.pnp.catalog.v1.ProductDetails} returns this
*/
proto.pnp.catalog.v1.ProductDetails.prototype.setProductDescriptionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 24, value);
};


/**
 * @param {!proto.pnp.catalog.v1.ProductDetails.ProductDescription=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pnp.catalog.v1.ProductDetails.ProductDescription}
 */
proto.pnp.catalog.v1.ProductDetails.prototype.addProductDescriptions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 24, opt_value, proto.pnp.catalog.v1.ProductDetails.ProductDescription, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pnp.catalog.v1.ProductDetails} returns this
 */
proto.pnp.catalog.v1.ProductDetails.prototype.clearProductDescriptionsList = function() {
  return this.setProductDescriptionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pnp.catalog.v1.Chip.prototype.toObject = function(opt_includeInstance) {
  return proto.pnp.catalog.v1.Chip.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pnp.catalog.v1.Chip} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.Chip.toObject = function(includeInstance, msg) {
  var f, obj = {
    label: jspb.Message.getFieldWithDefault(msg, 1, ""),
    textColor: jspb.Message.getFieldWithDefault(msg, 2, ""),
    bgColor: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pnp.catalog.v1.Chip}
 */
proto.pnp.catalog.v1.Chip.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pnp.catalog.v1.Chip;
  return proto.pnp.catalog.v1.Chip.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pnp.catalog.v1.Chip} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pnp.catalog.v1.Chip}
 */
proto.pnp.catalog.v1.Chip.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTextColor(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setBgColor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pnp.catalog.v1.Chip.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pnp.catalog.v1.Chip.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pnp.catalog.v1.Chip} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.Chip.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTextColor();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getBgColor();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string label = 1;
 * @return {string}
 */
proto.pnp.catalog.v1.Chip.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.Chip} returns this
 */
proto.pnp.catalog.v1.Chip.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string text_color = 2;
 * @return {string}
 */
proto.pnp.catalog.v1.Chip.prototype.getTextColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.Chip} returns this
 */
proto.pnp.catalog.v1.Chip.prototype.setTextColor = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string bg_color = 3;
 * @return {string}
 */
proto.pnp.catalog.v1.Chip.prototype.getBgColor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.Chip} returns this
 */
proto.pnp.catalog.v1.Chip.prototype.setBgColor = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pnp.catalog.v1.PurchaseInfo.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pnp.catalog.v1.PurchaseInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.pnp.catalog.v1.PurchaseInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pnp.catalog.v1.PurchaseInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.PurchaseInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    displayPrice: jspb.Message.getFieldWithDefault(msg, 1, ""),
    directCode: (f = msg.getDirectCode()) && proto.pnp.catalog.v1.PurchaseCodes.toObject(includeInstance, f),
    allCodesList: jspb.Message.toObjectList(msg.getAllCodesList(),
    proto.pnp.catalog.v1.PurchaseCodes.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pnp.catalog.v1.PurchaseInfo}
 */
proto.pnp.catalog.v1.PurchaseInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pnp.catalog.v1.PurchaseInfo;
  return proto.pnp.catalog.v1.PurchaseInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pnp.catalog.v1.PurchaseInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pnp.catalog.v1.PurchaseInfo}
 */
proto.pnp.catalog.v1.PurchaseInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayPrice(value);
      break;
    case 2:
      var value = new proto.pnp.catalog.v1.PurchaseCodes;
      reader.readMessage(value,proto.pnp.catalog.v1.PurchaseCodes.deserializeBinaryFromReader);
      msg.setDirectCode(value);
      break;
    case 8:
      var value = new proto.pnp.catalog.v1.PurchaseCodes;
      reader.readMessage(value,proto.pnp.catalog.v1.PurchaseCodes.deserializeBinaryFromReader);
      msg.addAllCodes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pnp.catalog.v1.PurchaseInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pnp.catalog.v1.PurchaseInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pnp.catalog.v1.PurchaseInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.PurchaseInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDisplayPrice();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDirectCode();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.pnp.catalog.v1.PurchaseCodes.serializeBinaryToWriter
    );
  }
  f = message.getAllCodesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.pnp.catalog.v1.PurchaseCodes.serializeBinaryToWriter
    );
  }
};


/**
 * optional string display_price = 1;
 * @return {string}
 */
proto.pnp.catalog.v1.PurchaseInfo.prototype.getDisplayPrice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.PurchaseInfo} returns this
 */
proto.pnp.catalog.v1.PurchaseInfo.prototype.setDisplayPrice = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional PurchaseCodes direct_code = 2;
 * @return {?proto.pnp.catalog.v1.PurchaseCodes}
 */
proto.pnp.catalog.v1.PurchaseInfo.prototype.getDirectCode = function() {
  return /** @type{?proto.pnp.catalog.v1.PurchaseCodes} */ (
    jspb.Message.getWrapperField(this, proto.pnp.catalog.v1.PurchaseCodes, 2));
};


/**
 * @param {?proto.pnp.catalog.v1.PurchaseCodes|undefined} value
 * @return {!proto.pnp.catalog.v1.PurchaseInfo} returns this
*/
proto.pnp.catalog.v1.PurchaseInfo.prototype.setDirectCode = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pnp.catalog.v1.PurchaseInfo} returns this
 */
proto.pnp.catalog.v1.PurchaseInfo.prototype.clearDirectCode = function() {
  return this.setDirectCode(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pnp.catalog.v1.PurchaseInfo.prototype.hasDirectCode = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated PurchaseCodes all_codes = 8;
 * @return {!Array<!proto.pnp.catalog.v1.PurchaseCodes>}
 */
proto.pnp.catalog.v1.PurchaseInfo.prototype.getAllCodesList = function() {
  return /** @type{!Array<!proto.pnp.catalog.v1.PurchaseCodes>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pnp.catalog.v1.PurchaseCodes, 8));
};


/**
 * @param {!Array<!proto.pnp.catalog.v1.PurchaseCodes>} value
 * @return {!proto.pnp.catalog.v1.PurchaseInfo} returns this
*/
proto.pnp.catalog.v1.PurchaseInfo.prototype.setAllCodesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.pnp.catalog.v1.PurchaseCodes=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pnp.catalog.v1.PurchaseCodes}
 */
proto.pnp.catalog.v1.PurchaseInfo.prototype.addAllCodes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.pnp.catalog.v1.PurchaseCodes, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pnp.catalog.v1.PurchaseInfo} returns this
 */
proto.pnp.catalog.v1.PurchaseInfo.prototype.clearAllCodesList = function() {
  return this.setAllCodesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pnp.catalog.v1.PurchaseCodes.prototype.toObject = function(opt_includeInstance) {
  return proto.pnp.catalog.v1.PurchaseCodes.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pnp.catalog.v1.PurchaseCodes} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.PurchaseCodes.toObject = function(includeInstance, msg) {
  var f, obj = {
    pnpCode: jspb.Message.getFieldWithDefault(msg, 1, ""),
    googleCode: jspb.Message.getFieldWithDefault(msg, 2, ""),
    appleCode: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pnp.catalog.v1.PurchaseCodes}
 */
proto.pnp.catalog.v1.PurchaseCodes.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pnp.catalog.v1.PurchaseCodes;
  return proto.pnp.catalog.v1.PurchaseCodes.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pnp.catalog.v1.PurchaseCodes} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pnp.catalog.v1.PurchaseCodes}
 */
proto.pnp.catalog.v1.PurchaseCodes.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPnpCode(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setGoogleCode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppleCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pnp.catalog.v1.PurchaseCodes.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pnp.catalog.v1.PurchaseCodes.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pnp.catalog.v1.PurchaseCodes} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.catalog.v1.PurchaseCodes.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPnpCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getGoogleCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAppleCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string pnp_code = 1;
 * @return {string}
 */
proto.pnp.catalog.v1.PurchaseCodes.prototype.getPnpCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.PurchaseCodes} returns this
 */
proto.pnp.catalog.v1.PurchaseCodes.prototype.setPnpCode = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string google_code = 2;
 * @return {string}
 */
proto.pnp.catalog.v1.PurchaseCodes.prototype.getGoogleCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.PurchaseCodes} returns this
 */
proto.pnp.catalog.v1.PurchaseCodes.prototype.setGoogleCode = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string apple_code = 3;
 * @return {string}
 */
proto.pnp.catalog.v1.PurchaseCodes.prototype.getAppleCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.catalog.v1.PurchaseCodes} returns this
 */
proto.pnp.catalog.v1.PurchaseCodes.prototype.setAppleCode = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


goog.object.extend(exports, proto.pnp.catalog.v1);
