// source: pnp/recipient/v1/recipient.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var pnp_common_v1_locale_pb = require('../../../pnp/common/v1/locale_pb.js');
goog.object.extend(proto, pnp_common_v1_locale_pb);
goog.exportSymbol('proto.pnp.recipient.v1.CreateRecipientRequest', null, global);
goog.exportSymbol('proto.pnp.recipient.v1.DeleteRecipientRequest', null, global);
goog.exportSymbol('proto.pnp.recipient.v1.GetRecipientRequest', null, global);
goog.exportSymbol('proto.pnp.recipient.v1.ListRecipientsResponse', null, global);
goog.exportSymbol('proto.pnp.recipient.v1.Recipient', null, global);
goog.exportSymbol('proto.pnp.recipient.v1.Recipient.Type', null, global);
goog.exportSymbol('proto.pnp.recipient.v1.RecipientData', null, global);
goog.exportSymbol('proto.pnp.recipient.v1.UpdateRecipientRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pnp.recipient.v1.ListRecipientsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pnp.recipient.v1.ListRecipientsResponse.repeatedFields_, null);
};
goog.inherits(proto.pnp.recipient.v1.ListRecipientsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pnp.recipient.v1.ListRecipientsResponse.displayName = 'proto.pnp.recipient.v1.ListRecipientsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pnp.recipient.v1.GetRecipientRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pnp.recipient.v1.GetRecipientRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pnp.recipient.v1.GetRecipientRequest.displayName = 'proto.pnp.recipient.v1.GetRecipientRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pnp.recipient.v1.CreateRecipientRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pnp.recipient.v1.CreateRecipientRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pnp.recipient.v1.CreateRecipientRequest.displayName = 'proto.pnp.recipient.v1.CreateRecipientRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pnp.recipient.v1.RecipientData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pnp.recipient.v1.RecipientData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pnp.recipient.v1.RecipientData.displayName = 'proto.pnp.recipient.v1.RecipientData';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pnp.recipient.v1.UpdateRecipientRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pnp.recipient.v1.UpdateRecipientRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pnp.recipient.v1.UpdateRecipientRequest.displayName = 'proto.pnp.recipient.v1.UpdateRecipientRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pnp.recipient.v1.DeleteRecipientRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pnp.recipient.v1.DeleteRecipientRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pnp.recipient.v1.DeleteRecipientRequest.displayName = 'proto.pnp.recipient.v1.DeleteRecipientRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pnp.recipient.v1.Recipient = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pnp.recipient.v1.Recipient, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pnp.recipient.v1.Recipient.displayName = 'proto.pnp.recipient.v1.Recipient';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pnp.recipient.v1.ListRecipientsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pnp.recipient.v1.ListRecipientsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pnp.recipient.v1.ListRecipientsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pnp.recipient.v1.ListRecipientsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.recipient.v1.ListRecipientsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    recipientsList: jspb.Message.toObjectList(msg.getRecipientsList(),
    proto.pnp.recipient.v1.Recipient.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pnp.recipient.v1.ListRecipientsResponse}
 */
proto.pnp.recipient.v1.ListRecipientsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pnp.recipient.v1.ListRecipientsResponse;
  return proto.pnp.recipient.v1.ListRecipientsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pnp.recipient.v1.ListRecipientsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pnp.recipient.v1.ListRecipientsResponse}
 */
proto.pnp.recipient.v1.ListRecipientsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.pnp.recipient.v1.Recipient;
      reader.readMessage(value,proto.pnp.recipient.v1.Recipient.deserializeBinaryFromReader);
      msg.addRecipients(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pnp.recipient.v1.ListRecipientsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pnp.recipient.v1.ListRecipientsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pnp.recipient.v1.ListRecipientsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.recipient.v1.ListRecipientsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRecipientsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.pnp.recipient.v1.Recipient.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Recipient recipients = 1;
 * @return {!Array<!proto.pnp.recipient.v1.Recipient>}
 */
proto.pnp.recipient.v1.ListRecipientsResponse.prototype.getRecipientsList = function() {
  return /** @type{!Array<!proto.pnp.recipient.v1.Recipient>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pnp.recipient.v1.Recipient, 1));
};


/**
 * @param {!Array<!proto.pnp.recipient.v1.Recipient>} value
 * @return {!proto.pnp.recipient.v1.ListRecipientsResponse} returns this
*/
proto.pnp.recipient.v1.ListRecipientsResponse.prototype.setRecipientsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.pnp.recipient.v1.Recipient=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pnp.recipient.v1.Recipient}
 */
proto.pnp.recipient.v1.ListRecipientsResponse.prototype.addRecipients = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.pnp.recipient.v1.Recipient, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pnp.recipient.v1.ListRecipientsResponse} returns this
 */
proto.pnp.recipient.v1.ListRecipientsResponse.prototype.clearRecipientsList = function() {
  return this.setRecipientsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pnp.recipient.v1.GetRecipientRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pnp.recipient.v1.GetRecipientRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pnp.recipient.v1.GetRecipientRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.recipient.v1.GetRecipientRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pnp.recipient.v1.GetRecipientRequest}
 */
proto.pnp.recipient.v1.GetRecipientRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pnp.recipient.v1.GetRecipientRequest;
  return proto.pnp.recipient.v1.GetRecipientRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pnp.recipient.v1.GetRecipientRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pnp.recipient.v1.GetRecipientRequest}
 */
proto.pnp.recipient.v1.GetRecipientRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pnp.recipient.v1.GetRecipientRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pnp.recipient.v1.GetRecipientRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pnp.recipient.v1.GetRecipientRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.recipient.v1.GetRecipientRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.pnp.recipient.v1.GetRecipientRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pnp.recipient.v1.GetRecipientRequest} returns this
 */
proto.pnp.recipient.v1.GetRecipientRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pnp.recipient.v1.CreateRecipientRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pnp.recipient.v1.CreateRecipientRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pnp.recipient.v1.CreateRecipientRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.recipient.v1.CreateRecipientRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    dataMap: (f = msg.getDataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pnp.recipient.v1.CreateRecipientRequest}
 */
proto.pnp.recipient.v1.CreateRecipientRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pnp.recipient.v1.CreateRecipientRequest;
  return proto.pnp.recipient.v1.CreateRecipientRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pnp.recipient.v1.CreateRecipientRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pnp.recipient.v1.CreateRecipientRequest}
 */
proto.pnp.recipient.v1.CreateRecipientRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.pnp.recipient.v1.Recipient.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = msg.getDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pnp.recipient.v1.CreateRecipientRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pnp.recipient.v1.CreateRecipientRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pnp.recipient.v1.CreateRecipientRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.recipient.v1.CreateRecipientRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional Recipient.Type type = 1;
 * @return {!proto.pnp.recipient.v1.Recipient.Type}
 */
proto.pnp.recipient.v1.CreateRecipientRequest.prototype.getType = function() {
  return /** @type {!proto.pnp.recipient.v1.Recipient.Type} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.pnp.recipient.v1.Recipient.Type} value
 * @return {!proto.pnp.recipient.v1.CreateRecipientRequest} returns this
 */
proto.pnp.recipient.v1.CreateRecipientRequest.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * map<string, string> data = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.pnp.recipient.v1.CreateRecipientRequest.prototype.getDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.pnp.recipient.v1.CreateRecipientRequest} returns this
 */
proto.pnp.recipient.v1.CreateRecipientRequest.prototype.clearDataMap = function() {
  this.getDataMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pnp.recipient.v1.RecipientData.prototype.toObject = function(opt_includeInstance) {
  return proto.pnp.recipient.v1.RecipientData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pnp.recipient.v1.RecipientData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.recipient.v1.RecipientData.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    dataMap: (f = msg.getDataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pnp.recipient.v1.RecipientData}
 */
proto.pnp.recipient.v1.RecipientData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pnp.recipient.v1.RecipientData;
  return proto.pnp.recipient.v1.RecipientData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pnp.recipient.v1.RecipientData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pnp.recipient.v1.RecipientData}
 */
proto.pnp.recipient.v1.RecipientData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 2:
      var value = msg.getDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pnp.recipient.v1.RecipientData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pnp.recipient.v1.RecipientData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pnp.recipient.v1.RecipientData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.recipient.v1.RecipientData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.pnp.recipient.v1.RecipientData.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pnp.recipient.v1.RecipientData} returns this
 */
proto.pnp.recipient.v1.RecipientData.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * map<string, string> data = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.pnp.recipient.v1.RecipientData.prototype.getDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.pnp.recipient.v1.RecipientData} returns this
 */
proto.pnp.recipient.v1.RecipientData.prototype.clearDataMap = function() {
  this.getDataMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pnp.recipient.v1.UpdateRecipientRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pnp.recipient.v1.UpdateRecipientRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pnp.recipient.v1.UpdateRecipientRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.recipient.v1.UpdateRecipientRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    acceptBirthdayVideo: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    dataMap: (f = msg.getDataMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pnp.recipient.v1.UpdateRecipientRequest}
 */
proto.pnp.recipient.v1.UpdateRecipientRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pnp.recipient.v1.UpdateRecipientRequest;
  return proto.pnp.recipient.v1.UpdateRecipientRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pnp.recipient.v1.UpdateRecipientRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pnp.recipient.v1.UpdateRecipientRequest}
 */
proto.pnp.recipient.v1.UpdateRecipientRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAcceptBirthdayVideo(value);
      break;
    case 3:
      var value = msg.getDataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pnp.recipient.v1.UpdateRecipientRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pnp.recipient.v1.UpdateRecipientRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pnp.recipient.v1.UpdateRecipientRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.recipient.v1.UpdateRecipientRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getAcceptBirthdayVideo();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getDataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.pnp.recipient.v1.UpdateRecipientRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pnp.recipient.v1.UpdateRecipientRequest} returns this
 */
proto.pnp.recipient.v1.UpdateRecipientRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool accept_birthday_video = 2;
 * @return {boolean}
 */
proto.pnp.recipient.v1.UpdateRecipientRequest.prototype.getAcceptBirthdayVideo = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.pnp.recipient.v1.UpdateRecipientRequest} returns this
 */
proto.pnp.recipient.v1.UpdateRecipientRequest.prototype.setAcceptBirthdayVideo = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * map<string, string> data = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.pnp.recipient.v1.UpdateRecipientRequest.prototype.getDataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.pnp.recipient.v1.UpdateRecipientRequest} returns this
 */
proto.pnp.recipient.v1.UpdateRecipientRequest.prototype.clearDataMap = function() {
  this.getDataMap().clear();
  return this;};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pnp.recipient.v1.DeleteRecipientRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.pnp.recipient.v1.DeleteRecipientRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pnp.recipient.v1.DeleteRecipientRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.recipient.v1.DeleteRecipientRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pnp.recipient.v1.DeleteRecipientRequest}
 */
proto.pnp.recipient.v1.DeleteRecipientRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pnp.recipient.v1.DeleteRecipientRequest;
  return proto.pnp.recipient.v1.DeleteRecipientRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pnp.recipient.v1.DeleteRecipientRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pnp.recipient.v1.DeleteRecipientRequest}
 */
proto.pnp.recipient.v1.DeleteRecipientRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pnp.recipient.v1.DeleteRecipientRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pnp.recipient.v1.DeleteRecipientRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pnp.recipient.v1.DeleteRecipientRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.recipient.v1.DeleteRecipientRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.pnp.recipient.v1.DeleteRecipientRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pnp.recipient.v1.DeleteRecipientRequest} returns this
 */
proto.pnp.recipient.v1.DeleteRecipientRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pnp.recipient.v1.Recipient.prototype.toObject = function(opt_includeInstance) {
  return proto.pnp.recipient.v1.Recipient.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pnp.recipient.v1.Recipient} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.recipient.v1.Recipient.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    createBirthdayVideo: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    type: jspb.Message.getFieldWithDefault(msg, 3, 0),
    locale: jspb.Message.getFieldWithDefault(msg, 4, 0),
    birthDate: (f = msg.getBirthDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 16, ""),
    imageUrl: jspb.Message.getFieldWithDefault(msg, 17, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pnp.recipient.v1.Recipient}
 */
proto.pnp.recipient.v1.Recipient.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pnp.recipient.v1.Recipient;
  return proto.pnp.recipient.v1.Recipient.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pnp.recipient.v1.Recipient} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pnp.recipient.v1.Recipient}
 */
proto.pnp.recipient.v1.Recipient.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCreateBirthdayVideo(value);
      break;
    case 3:
      var value = /** @type {!proto.pnp.recipient.v1.Recipient.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 4:
      var value = /** @type {!proto.pnp.common.v1.Locale} */ (reader.readEnum());
      msg.setLocale(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setBirthDate(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pnp.recipient.v1.Recipient.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pnp.recipient.v1.Recipient.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pnp.recipient.v1.Recipient} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pnp.recipient.v1.Recipient.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getCreateBirthdayVideo();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getLocale();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getBirthDate();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getImageUrl();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.pnp.recipient.v1.Recipient.Type = {
  SINGLE: 0,
  GROUP: 1
};

/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.pnp.recipient.v1.Recipient.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pnp.recipient.v1.Recipient} returns this
 */
proto.pnp.recipient.v1.Recipient.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool create_birthday_video = 2;
 * @return {boolean}
 */
proto.pnp.recipient.v1.Recipient.prototype.getCreateBirthdayVideo = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.pnp.recipient.v1.Recipient} returns this
 */
proto.pnp.recipient.v1.Recipient.prototype.setCreateBirthdayVideo = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional Type type = 3;
 * @return {!proto.pnp.recipient.v1.Recipient.Type}
 */
proto.pnp.recipient.v1.Recipient.prototype.getType = function() {
  return /** @type {!proto.pnp.recipient.v1.Recipient.Type} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.pnp.recipient.v1.Recipient.Type} value
 * @return {!proto.pnp.recipient.v1.Recipient} returns this
 */
proto.pnp.recipient.v1.Recipient.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional pnp.common.v1.Locale locale = 4;
 * @return {!proto.pnp.common.v1.Locale}
 */
proto.pnp.recipient.v1.Recipient.prototype.getLocale = function() {
  return /** @type {!proto.pnp.common.v1.Locale} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.pnp.common.v1.Locale} value
 * @return {!proto.pnp.recipient.v1.Recipient} returns this
 */
proto.pnp.recipient.v1.Recipient.prototype.setLocale = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp birth_date = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.pnp.recipient.v1.Recipient.prototype.getBirthDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.pnp.recipient.v1.Recipient} returns this
*/
proto.pnp.recipient.v1.Recipient.prototype.setBirthDate = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.pnp.recipient.v1.Recipient} returns this
 */
proto.pnp.recipient.v1.Recipient.prototype.clearBirthDate = function() {
  return this.setBirthDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pnp.recipient.v1.Recipient.prototype.hasBirthDate = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string name = 16;
 * @return {string}
 */
proto.pnp.recipient.v1.Recipient.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.recipient.v1.Recipient} returns this
 */
proto.pnp.recipient.v1.Recipient.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string image_url = 17;
 * @return {string}
 */
proto.pnp.recipient.v1.Recipient.prototype.getImageUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.pnp.recipient.v1.Recipient} returns this
 */
proto.pnp.recipient.v1.Recipient.prototype.setImageUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};


goog.object.extend(exports, proto.pnp.recipient.v1);
